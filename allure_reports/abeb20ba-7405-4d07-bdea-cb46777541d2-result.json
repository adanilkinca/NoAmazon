{"name": "test_end_to_end_checkout_guest_user", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_end_to_end_checkout_guest_user.TestEndToEndCheckoutGuestUser object at 0x0000021723A70340>\n\n    @pytest.mark.tcid147\n    def test_end_to_end_checkout_guest_user(self):\n    \n        home_p = HomePage(self.driver)\n        header = Header(self.driver)\n        cart_p = CartPage(self.driver)\n        checkout_p = CheckoutPage(self.driver)\n        order_received_p = OrderReceivedPage(self.driver)\n    \n        # go to home page\n        home_p.go_to_home_page()\n    \n        # add 1 item to cart\n        home_p.click_first_add_to_cart_button()\n    \n        # make sure the cart is updated before going to cart\n>       header.wait_until_cart_item_count(1)\n\ntests\\end_to_end\\test_end_to_end_checkout_guest_user.py:30: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsource\\pages\\Header.py:15: in wait_until_cart_item_count\n    self.sl.wait_until_element_contains_text(self.CART_ITEM_COUNT, expected_text)\nsource\\SeleniumExtended.py:35: in wait_until_element_contains_text\n    WebDriverWait(self.driver, timeout).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"30c5d4dcfa80de4896963c951ba7d642\")>\nmethod = <function text_to_be_present_in_element.<locals>._predicate at 0x0000021723B91750>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Users\\AndrewMSI\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:90: TimeoutException"}, "attachments": [{"name": "screenshot", "source": "90a238c6-84f1-4562-a48d-3d4caac61d22-attachment.png", "type": "image/png"}], "start": 1660578437708, "stop": 1660578449786, "uuid": "3d94922a-dcba-4bcf-aa4f-e7dcdde2029d", "historyId": "47c0a5668bc9a9160a2d7a2a4e6cb615", "testCaseId": "dd3fc4f142e8c6d0e4aa194507ebe868", "fullName": "tests.end_to_end.test_end_to_end_checkout_guest_user.TestEndToEndCheckoutGuestUser#test_end_to_end_checkout_guest_user", "labels": [{"name": "tag", "value": "tcid147"}, {"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "parentSuite", "value": "tests.end_to_end"}, {"name": "suite", "value": "test_end_to_end_checkout_guest_user"}, {"name": "subSuite", "value": "TestEndToEndCheckoutGuestUser"}, {"name": "host", "value": "msi"}, {"name": "thread", "value": "15948-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.end_to_end.test_end_to_end_checkout_guest_user"}]}