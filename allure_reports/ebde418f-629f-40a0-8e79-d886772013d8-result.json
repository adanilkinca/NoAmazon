{"name": "test_login_nonexisting_user", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message:", "trace": "self = <test_login_negative.TestLoginNegative object at 0x0000021723A709A0>\n\n        @pytest.mark.tcid145\n        # @pytest.mark.smoke\n        def test_login_nonexisting_user(self):\n            print('*******')\n            print('TEST LOGIN DOES NOT EXIST')\n            print('*******')\n            my_account = MyAccountSignedOut(self.driver)\n            my_account.go_to_my_account()\n            my_account.input_login_username('dj;lJPf')\n            my_account.input_login_password('iso<Djg')\n            my_account.click_login_button()\n    \n            # verify error message\n    #TO DO: not hardcode keys of the 'my_account.input_login_username'!\n            expected_err = 'HError: The username dj;lJPf is not registered on this site. If you are unsure of your username, try your email address instead.'\n>           my_account.wait_until_error_is_displayed(expected_err)\n\ntests\\my_account\\test_login_negative.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsource\\pages\\MyAccountSignedOut.py:31: in wait_until_error_is_displayed\n    self.sl.wait_until_element_contains_text(self.ERRORS_UL, exp_err)\nsource\\SeleniumExtended.py:35: in wait_until_element_contains_text\n    WebDriverWait(self.driver, timeout).until(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"e3c36e280bbae730b0136b69b6760233\")>\nmethod = <function text_to_be_present_in_element.<locals>._predicate at 0x0000021723B1A830>, message = ''\n\n    def until(self, method, message: str = \"\"):\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, 'screen', None)\n                stacktrace = getattr(exc, 'stacktrace', None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nC:\\Users\\AndrewMSI\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:90: TimeoutException"}, "attachments": [{"name": "screenshot", "source": "2be545a3-2525-4f72-b497-01110f2af36c-attachment.png", "type": "image/png"}, {"name": "stdout", "source": "996f15fc-c806-4cf4-8565-d4feebfa5ddd-attachment.txt", "type": "text/plain"}], "start": 1660578416764, "stop": 1660578429490, "uuid": "aa9b2cd7-27c8-4980-8642-24c2421b8f2d", "historyId": "008599728f57c0347031025f5e290b98", "testCaseId": "bb349317f33cfd14fc30b61872dbe239", "fullName": "tests.my_account.test_login_negative.TestLoginNegative#test_login_nonexisting_user", "labels": [{"name": "tag", "value": "tcid145"}, {"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "parentSuite", "value": "tests.my_account"}, {"name": "suite", "value": "test_login_negative"}, {"name": "subSuite", "value": "TestLoginNegative"}, {"name": "host", "value": "msi"}, {"name": "thread", "value": "15948-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.my_account.test_login_negative"}]}