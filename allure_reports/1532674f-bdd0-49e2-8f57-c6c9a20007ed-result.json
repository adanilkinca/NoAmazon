{"name": "test_end_to_end_checkout_guest_user", "status": "broken", "statusDetails": {"message": "Exception: Environment variables 'DB_USER' and 'DB_PASSWORD' must be set.", "trace": "self = <test_end_to_end_checkout_guest_user.TestEndToEndCheckoutGuestUser object at 0x0000011D249F6350>\n\n    @pytest.mark.tcid147\n    def test_end_to_end_checkout_guest_user(self):\n    \n        home_p = HomePage(self.driver)\n        header = Header(self.driver)\n        cart_p = CartPage(self.driver)\n        checkout_p = CheckoutPage(self.driver)\n        order_received_p = OrderReceivedPage(self.driver)\n    \n        # go to home page\n        home_p.go_to_home_page()\n    \n        # add 1 item to cart\n        home_p.click_first_add_to_cart_button()\n    \n        # make sure the cart is updated before going to cart\n        header.wait_until_cart_item_count(1)\n    \n        # go to cart\n        header.click_on_cart_on_right_header()\n        product_names = cart_p.get_all_product_names_in_cart()\n        assert len(product_names) == 1, f'Expected 1 item in cart but found {len(product_names)}'\n    \n        # apply the free coupon\n        coupon_code = GenericConfigs.FREE_COUPON\n        cart_p.apply_coupon(coupon_code)\n    \n        # click on checkout\n        cart_p.click_on_proceed_to_checkout()\n    \n        # fill in form\n        checkout_p.fill_in_billing_info()\n    \n        # click on place order\n        checkout_p.click_place_order()\n    \n        # verify order is received\n        order_received_p.verify_order_received_page_loaded()\n    \n        # verify order is recorded in db (via SQL or via API)\n        order_no = order_received_p.get_order_number()\n        print('********')\n        print(order_no)\n        print('********')\n    \n>       db_order = get_order_from_db_by_order_no(order_no)\n\ntests\\end_to_end\\test_end_to_end_checkout_guest_user.py:59: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nsource\\helpers\\database_helpers.py:24: in get_order_from_db_by_order_no\n    db_order = read_from_db(sql)\nsource\\helpers\\database_helpers.py:6: in read_from_db\n    db_creds = get_database_credentials()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\n    def get_database_credentials():\n    \n        env = os.environ.get('ENV', 'test')\n    \n        db_user = os.environ.get('DB_USER')\n        db_password = os.environ.get('DB_PASSWORD')\n        if not db_user or not db_password:\n>           raise Exception(\"Environment variables 'DB_USER' and 'DB_PASSWORD' must be set.\")\nE           Exception: Environment variables 'DB_USER' and 'DB_PASSWORD' must be set.\n\nsource\\helpers\\config_helpers.py:22: Exception"}, "attachments": [{"name": "stdout", "source": "201cc713-fe3e-4a10-acfc-de56195067eb-attachment.txt", "type": "text/plain"}], "start": 1660577701453, "stop": 1660577721064, "uuid": "ff92bf68-b0cf-4a63-a8b9-a660c1963a46", "historyId": "47c0a5668bc9a9160a2d7a2a4e6cb615", "testCaseId": "dd3fc4f142e8c6d0e4aa194507ebe868", "fullName": "tests.end_to_end.test_end_to_end_checkout_guest_user.TestEndToEndCheckoutGuestUser#test_end_to_end_checkout_guest_user", "labels": [{"name": "tag", "value": "tcid147"}, {"name": "tag", "value": "@pytest.mark.usefixtures('init_driver')"}, {"name": "parentSuite", "value": "tests.end_to_end"}, {"name": "suite", "value": "test_end_to_end_checkout_guest_user"}, {"name": "subSuite", "value": "TestEndToEndCheckoutGuestUser"}, {"name": "host", "value": "msi"}, {"name": "thread", "value": "19544-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.end_to_end.test_end_to_end_checkout_guest_user"}]}